[{"/Users/aditya/Documents/Reacts/project_video_chat/client/src/index.js":"1","/Users/aditya/Documents/Reacts/project_video_chat/client/src/Context.js":"2","/Users/aditya/Documents/Reacts/project_video_chat/client/src/App.js":"3","/Users/aditya/Documents/Reacts/project_video_chat/client/src/components/Sidebar.jsx":"4","/Users/aditya/Documents/Reacts/project_video_chat/client/src/components/VideoPlayer.jsx":"5","/Users/aditya/Documents/Reacts/project_video_chat/client/src/components/Notifications.jsx":"6","/Users/aditya/Desktop/Conversa/client/src/index.js":"7","/Users/aditya/Desktop/Conversa/client/src/App.js":"8","/Users/aditya/Desktop/Conversa/client/src/Context.js":"9","/Users/aditya/Desktop/Conversa/client/src/components/Sidebar.jsx":"10","/Users/aditya/Desktop/Conversa/client/src/components/Notifications.jsx":"11","/Users/aditya/Desktop/Conversa/client/src/components/VideoPlayer.jsx":"12"},{"size":266,"mtime":1688277151473,"results":"13","hashOfConfig":"14"},{"size":2480,"mtime":1695387929551,"results":"15","hashOfConfig":"14"},{"size":1163,"mtime":1695388257249,"results":"16","hashOfConfig":"14"},{"size":2862,"mtime":1694807266983,"results":"17","hashOfConfig":"14"},{"size":1455,"mtime":1688277151473,"results":"18","hashOfConfig":"14"},{"size":607,"mtime":1688277151473,"results":"19","hashOfConfig":"14"},{"size":266,"mtime":1688277151473,"results":"20","hashOfConfig":"21"},{"size":1163,"mtime":1695388257249,"results":"22","hashOfConfig":"21"},{"size":2480,"mtime":1695387929551,"results":"23","hashOfConfig":"21"},{"size":2862,"mtime":1694807266983,"results":"24","hashOfConfig":"21"},{"size":607,"mtime":1688277151473,"results":"25","hashOfConfig":"21"},{"size":1455,"mtime":1688277151473,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rf0mbx",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v6pp46",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aditya/Documents/Reacts/project_video_chat/client/src/index.js",[],"/Users/aditya/Documents/Reacts/project_video_chat/client/src/Context.js",[],"/Users/aditya/Documents/Reacts/project_video_chat/client/src/App.js",[],"/Users/aditya/Documents/Reacts/project_video_chat/client/src/components/Sidebar.jsx",["52"],"import React, { useState, useContext } from 'react';\nimport { Button, TextField, Grid, Typography, Container, Paper } from '@material-ui/core';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { SocketContext } from '../Context';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  gridContainer: {\n    width: '100%',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n    },\n  },\n  container: {\n    width: '600px',\n    margin: '35px 0',\n    padding: 0,\n    [theme.breakpoints.down('xs')]: {\n      width: '80%',\n    },\n  },\n  margin: {\n    marginTop: 20,\n  },\n  padding: {\n    padding: 20,\n  },\n  paper: {\n    padding: '10px 20px',\n    border: '2px solid black',\n  },\n}));\n\nconst Sidebar = ({ children }) => {\n  const { me, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext);\n  const [idToCall, setIdToCall] = useState('');\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.container}>\n      <Paper elevation={10} className={classes.paper}>\n        <form className={classes.root} noValidate autoComplete=\"off\">\n          <Grid container className={classes.gridContainer}>\n            <Grid item xs={12} md={6} className={classes.padding}>\n              <Typography gutterBottom variant=\"h6\">Account Info</Typography>\n              <TextField label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} fullWidth />\n              {console.log(me)}\n\n              <CopyToClipboard text={me} className={classes.margin}>\n                <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>\n                  Copy Your ID\n                </Button>\n              </CopyToClipboard>\n            </Grid>\n            <Grid item xs={12} md={6} className={classes.padding}>\n              <Typography gutterBottom variant=\"h6\">Make a call</Typography>\n              <TextField label=\"ID to call\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth />\n              {callAccepted && !callEnded ? (\n                <Button variant=\"contained\" color=\"secondary\" startIcon={<PhoneDisabled fontSize=\"large\" />} fullWidth onClick={leaveCall} className={classes.margin}>\n                  Hang Up\n                </Button>\n              ) : (\n                <Button variant=\"contained\" color=\"primary\" startIcon={<Phone fontSize=\"large\" />} fullWidth onClick={() => callUser(idToCall)} className={classes.margin}>\n                  Call\n                </Button>\n              )}\n            </Grid>\n          </Grid>\n        </form>\n        {children}\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Sidebar;\n","/Users/aditya/Documents/Reacts/project_video_chat/client/src/components/VideoPlayer.jsx",[],"/Users/aditya/Documents/Reacts/project_video_chat/client/src/components/Notifications.jsx",[],"/Users/aditya/Desktop/Conversa/client/src/index.js",[],"/Users/aditya/Desktop/Conversa/client/src/App.js",[],"/Users/aditya/Desktop/Conversa/client/src/Context.js",[],"/Users/aditya/Desktop/Conversa/client/src/components/Sidebar.jsx",[],"/Users/aditya/Desktop/Conversa/client/src/components/Notifications.jsx",[],"/Users/aditya/Desktop/Conversa/client/src/components/VideoPlayer.jsx",[],{"ruleId":"53","severity":1,"message":"54","line":53,"column":16,"nodeType":"55","messageId":"56","endLine":53,"endColumn":27},"no-console","Unexpected console statement.","MemberExpression","unexpected"]